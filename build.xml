<?xml version="1.0" encoding="UTF-8"?>
<project name="gp-unit" default="package">
    <property name="gpunit.dir" location="./" />

    <!-- in order to compile gp-unit, and to run gp-unit tests, must download the client library -->
    <property name="gp.host" value="genepatternbeta.broadinstitute.org" />
    <property name="gp.url" value="http://${gp.host}" />
    <property name="gp.user" value="jntest" />
    <property name="gp.password" value="jntest" />
    <property name="local.dir" location="${gpunit.dir}/tmp/${gp.host}" />
    <property name="client.lib.dir" location="${local.dir}/client" />
    <!-- if the client.dir already exists, skip the rest -->
    <available property="gp-client-lib-exists" file="${client.lib.dir}/GenePattern.jar" />

    <path id="gp.client.classpath">
        <pathelement location="${client.lib.dir}/GenePattern.jar" />
        <fileset dir="${client.lib.dir}/lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="gpunit.classpath">
        <fileset dir="${gpunit.dir}/lib">
            <include name="**/*.jar"/>
        </fileset>
        <pathelement location="${gpunit.dir}/classes"/>
        <path refid="gp.client.classpath" />
    </path>

    <target name="init">
        <tstamp />
        <mkdir dir="${gpunit.dir}/classes" />
        <mkdir dir="${gpunit.dir}/dist" />
        <mkdir dir="${client.lib.dir}" />
    </target>

    <target name="gp-client-lib" depends="init" unless="gp-client-lib-exists">
        <description>If necessary, download the Java Programming Library from the server, and unzip into a local directory</description>

        <property name="http.url" value="${gp.url}/gp/downloads/GenePattern.zip" />
        <get src="${http.url}" dest="${local.dir}/GenePattern.zip" usetimestamp="true" />
        <unzip src="${local.dir}/GenePattern.zip" dest="${client.lib.dir}" overwrite="true" />
    </target>

    <target name="compile" depends="init, gp-client-lib">
        <property name="java.target" value="1.5" />
        <javac debug="true" includeantruntime="false"
            defaultexcludes="true" 
            deprecation="true" 
            destdir="${gpunit.dir}/classes" 
            optimize="false" 
            proceed="false" 
            srcdir="${gpunit.dir}/src/main/java" 
            target="${java.target}" 
            source="${java.target}" 
            classpathref="gpunit.classpath" >
        </javac>
    </target>

    <target name="package" depends="compile">
        <jar basedir="${gpunit.dir}/classes" jarfile="${gpunit.dir}/dist/gp-unit.jar" />
    </target>

    <target name="clean">
        <delete dir="${gp.annotations.dir}/classes" />
        <delete dir="${gp.annotations.dir}/dist" />
    </target>
    <!-- END build gp-unit.jar -->
    
    <!-- run single gp-unit test via SOAP client request -->    
    <property name="test.file" location="./tests/protocols/01_Run/step1/test.yaml" />
    <macrodef name="run-test">
        <attribute name="test.file" />
        <sequential>
            <echo>Running test from @{test.file}</echo>
            <java classname="org.genepattern.gpunit.RunTest" fork="true"
                classpathref="gpunit.classpath" >
                <arg value="@{test.file}" />
            </java> 
        </sequential>
    </macrodef>

    <!-- run a set of gp-unit tests via SOAP client requests 
         use a parameterized jUnit test to submit the jobs and validate the results.
         
         To use the test, create a path, give it a refid, then create a property from that refid.
         Look at the gpunit-all-protocols target for an example. 
      -->
    <macrodef name="run-tests">
        <attribute name="testcases" />
        <attribute name="numthreads" default="16" />
        <!-- when running jobs in parallel, this is the max time in seconds to wait before finishing the test -->
        <attribute name="shutdowntimeout" default="300" /> 
        <sequential>
            <echo>testcases: @{testcases}</echo>
            <junit fork="yes" printsummary="false" haltonfailure="true">
                <test name="org.genepattern.gpunit.test.BatchModuleTest" outfile="test_all"/>
                <classpath refid="gpunit.classpath" />
                <formatter type="xml" usefile="false" />
                <sysproperty key="gpunit.testcase.dirs" value="@{testcases}" />
                <sysproperty key="junit.parallel.threads" value="@{numthreads}" />
                <sysproperty key="junit.parallel.shutdown.timeout" value="@{shutdowntimeout}" />

                <sysproperty key="genePatternUrl" value="${gp.url}" />
                <sysproperty key="username" value="${gp.user}" />
                <sysproperty key="password" value="${gp.password}" />
            </junit>
        </sequential>
    </macrodef>
    
    <target name="gpunit-test" depends="package">
        <run-test test.file="${test.file}" />
    </target>
    
    <target name="gpunit-all-protocols" depends="package">
        <path id="all-protocols.path">
            <pathelement location="./tests/protocols" />
        </path>
        <property name="all-protocols.testcases" refid="all-protocols.path" /> 
        <run-tests testcases="${all-protocols.testcases}" numthreads="32" shutdowntimeout="30" />
    </target>

    <target name="gpunit-saved-jobs" depends="package">
        <path id="saved-jobs.path">
            <pathelement location="./tests/saved_jobs" />
        </path>
        <property name="saved-jobs.testcases" refid="saved-jobs.path" /> 
        <run-tests testcases="${saved-jobs.testcases}" />
    </target>

    <target name="junit" depends="package">
        <path id="gpunit.testcase.path">
            <pathelement location="./tests/protocols/01_Run" />
            <pathelement location="./tests/saved_jobs" />
            <pathelement location="./tests/protocols/02_Differential/03_CMSViewer/test.yaml"/>
        </path>
        <property name="gpunit.testcase.dirs" refid="gpunit.testcase.path" /> 
        <run-tests testcases="${gpunit.testcase.dirs}" />
    </target>

</project>
